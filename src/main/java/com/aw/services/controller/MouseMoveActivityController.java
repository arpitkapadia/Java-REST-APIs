
package com.aw.services.controller;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.aw.services.repository.*;
import com.aw.services.model.*;

@Controller    // This means that this class is a Controller
@CrossOrigin
@RequestMapping(path="/mouse") // This means URL's start with /demo (after Application path)
public class MouseMoveActivityController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private MouseMoveActivityRepository mouseMoveActivityRepository;
	
	@Autowired 
	private UserRepository userRepository;
	

	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewScroll (@RequestParam String userId, @RequestParam int pageX
			, @RequestParam int pageY, @RequestParam String documentName) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		MouseMoveActivity n = new MouseMoveActivity();
		
		n.setPageX(pageX);
		n.setPageY(pageY);
		n.setDocumentName(documentName);
		User u = userRepository.findUser(userId);
		
		n.setUser(u);
		mouseMoveActivityRepository.save(n);
		return "Saved";
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<MouseMoveActivity> getAllClicks(@RequestParam int userId) {
		// This returns a JSON or XML with the users
		return mouseMoveActivityRepository.findAllUserMoveActivity(userId);
	}
}